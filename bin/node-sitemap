#!/usr/bin/env node

/*!
 * Sitemap
 * Copyright(c) 2011 Eugene Kalinin
 * MIT Licensed
 */


/**
 * Module dependencies
 */

var fs = require('fs')
  , path = require('path')
  , sm = require('sitemap')
  , libxml = require('libxmljs')
  , exec = require('child_process').exec;

/**
 * Framework version
 */
var version = '0.1.0';

/**
 * Path to the destination sitemap.xml
 */
var output = './sitemap.xml';

/**
 * Site for sitemap.xml generation
 */
var url;

/**
 * Verbose mode
 */
var verbose = false;

/**
 * Usage documentation.
 */
var usage = ''
  + '\n'
  + '  Usage: node-sitemap [options] [url]\n'
  + '\n'
  + '  Options:\n'
  + '    -o, --output             path to the ouput sitemap. default=./sitemap.xml\n'
  + '    -d, --verbose            output details on what is going on during execution\n'
  + '    -v, --version            output framework version\n'
  + '    -h, --help               output help information\n'
  ;

// Parse arguments
var args = process.argv.slice(2);

while (args.length) {
  var arg = args.shift();

  switch (arg) {
    case '-h':
    case '--help':
      abort(usage);
      break;

    case '-v':
    case '--version':
      abort(version);
      break;

    case '-d':
    case '--verbose':
      verbose = true;
      break;

    case '-o':
    case '--output':
      args.length
        ? (output = args.shift())
        : abort('--output requires an argument');
      break;

    default:
        url = arg;
  }
}

// Generating sitemap.xml
( function createSitemap(url, output) {

  path.exists(output, function(exists){
    if( exists ) {
      abort('File exists: ' + output);
    }

    var parsed = libxml.parseHtmlFile(url);

  });

})(url, output);

/* vim: set filetype=javascript : */
